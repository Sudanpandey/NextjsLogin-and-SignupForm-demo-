{"ast":null,"code":"var _jsxFileName = \"/home/lewin/formPractice/pages/login.jsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Typography, Box, Button, Avatar, Input } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nconst logInValidationSchema = Yup.object().shape({\n  email: Yup.string().min(2, \"Too Short!\").max(25, \"Too Long!\").required(\"Email is required\"),\n  password: Yup.string().min(2, \"Too Short!\").max(25, \"Too Long!\").min(6, \"Password has to be longer than 6 characters!\").required(\"Valid password  is required\")\n});\nconst useStyles = makeStyles({\n  wrapper: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  card: {\n    borderRadius: \"5px\",\n    width: \"350px\",\n    height: \"340px\",\n    backgroundColor: \"#F7F7F7\",\n    padding: \"20px\",\n    margin: \"80px\"\n  },\n  inputStyle: {\n    backgroundColor: \"#ffffff\",\n    border: \"1px solid #CCCCCC\",\n    borderBottom: \"1px solid #CCCCCC\",\n    borderRadius: \"4px\",\n    padding: \"0px 10px\"\n  }\n});\nconst initialValues = {\n  email: \"\",\n  password: \"\"\n};\n\nconst Index = () => {\n  const classes = useStyles();\n  return __jsx(\"div\", {\n    className: classes.wrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, __jsx(Box, {\n    className: classes.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, __jsx(Box, {\n    style: {\n      paddingTop: \"25px\",\n      marginBottom: \"10 px\",\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, __jsx(Typography, {\n    style: {\n      fontSize: \"35px\",\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, \"Log in\")), __jsx(Formik, {\n    initialValues: initialValues,\n    onSubmit: (values, {\n      resetForm\n    }) => {\n      console.log(values);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, ({\n    values,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    errors,\n    touched\n  }) => {\n    console.log(values);\n    return __jsx(Box, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }\n    }, __jsx(Box, {\n      style: {\n        marginLeft: \"65px  \"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, __jsx(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 19\n      }\n    }, \"Email:\"), __jsx(Box, {\n      className: classes.inputStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 19\n      }\n    }, __jsx(Input, {\n      name: \"email\",\n      value: values.email,\n      onChange: handleChange,\n      placeholder: \"Enter your Email\",\n      disableUnderline: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }\n    }))), __jsx(Box, {\n      style: {\n        marginLeft: \"65px \",\n        marginTop: \"15px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, __jsx(Typography, {\n      type: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 19\n      }\n    }, \"Password:\"), __jsx(Box, {\n      className: classes.inputStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 19\n      }\n    }, __jsx(Input, {\n      name: \"password\",\n      type: \"password\",\n      value: values.password,\n      onChange: handleChange,\n      placeholder: \"Enter your Password \",\n      disableUnderline: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }\n    }))), __jsx(Box, {\n      style: {\n        marginLeft: \"65px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }, __jsx(Button, {\n      style: {\n        marginTop: \"50px\",\n        backgroundColor: \"#347AB7\",\n        color: \"white\",\n        width: \"80%\"\n      },\n      variant: \"contained\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 19\n      }\n    }, \"Log in\")));\n  })));\n};\n\nexport default Index;","map":{"version":3,"sources":["/home/lewin/formPractice/pages/login.jsx"],"names":["React","Formik","Yup","Typography","Box","Button","Avatar","Input","makeStyles","TextField","logInValidationSchema","object","shape","email","string","min","max","required","password","useStyles","wrapper","display","flexDirection","justifyContent","alignItems","card","borderRadius","width","height","backgroundColor","padding","margin","inputStyle","border","borderBottom","initialValues","Index","classes","paddingTop","marginBottom","textAlign","fontSize","values","resetForm","console","log","handleChange","handleBlur","handleSubmit","errors","touched","marginLeft","marginTop","color"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Typography, Box, Button, Avatar, Input } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst logInValidationSchema = Yup.object().shape({\n  email: Yup.string()\n\n    .min(2, \"Too Short!\")\n    .max(25, \"Too Long!\")\n    .required(\"Email is required\"),\n  password: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(25, \"Too Long!\")\n    .min(6, \"Password has to be longer than 6 characters!\")\n    .required(\"Valid password  is required\"),\n});\n\n\nconst useStyles = makeStyles({\n  wrapper: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  card: {\n    borderRadius: \"5px\",\n    width: \"350px\",\n    height: \"340px\",\n    backgroundColor: \"#F7F7F7\",\n    padding: \"20px\",\n    margin: \"80px\",\n  },\n  inputStyle: {\n    backgroundColor: \"#ffffff\",\n    border: \"1px solid #CCCCCC\",\n    borderBottom: \"1px solid #CCCCCC\",\n    borderRadius: \"4px\",\n    padding: \"0px 10px\",\n  },\n});\n\nconst initialValues = {\n  email: \"\",\n  password: \"\",\n};\n\nconst Index = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.wrapper}>\n      <Box className={classes.card}>\n        <Box\n          style={{\n            paddingTop: \"25px\",\n            marginBottom: \"10 px\",\n            textAlign: \"center\",\n          }}\n        >\n          <Typography style={{ fontSize: \"35px\", textAlign: \"center\" }}>\n            Log in\n          </Typography>\n        </Box>\n\n        <Formik\n          initialValues={initialValues}\n          onSubmit={(values, { resetForm }) => {\n            console.log(values);\n          }}\n        >\n          {({\n            values,\n            handleChange,\n            handleBlur,\n            handleSubmit,\n            errors,\n            touched,\n          }) => {\n            console.log(values);\n            return (\n              <Box>\n                <Box style={{ marginLeft: \"65px  \" }}>\n                  <Typography>Email:</Typography>\n                  <Box className={classes.inputStyle}>\n                    <Input\n                      name=\"email\"\n                      value={values.email}\n                      onChange={handleChange}\n                      placeholder=\"Enter your Email\"\n                      disableUnderline={true}\n                    />\n                  </Box>\n                </Box>\n                <Box style={{ marginLeft: \"65px \", marginTop: \"15px\" }}>\n                  <Typography type=\"password\">Password:</Typography>\n                  <Box className={classes.inputStyle}>\n                    <Input\n                      name=\"password\"\n                      type=\"password\"\n                      value={values.password}\n                      onChange={handleChange}\n                      placeholder=\"Enter your Password \"\n                      disableUnderline={true}\n                    />\n                  </Box>\n                </Box>\n                <Box style={{ marginLeft: \"65px\" }}>\n                  <Button\n                    style={{\n                      marginTop: \"50px\",\n                      backgroundColor: \"#347AB7\",\n                      color: \"white\",\n                      width: \"80%\",\n                    }}\n                    variant=\"contained\"\n                  >\n                    Log in\n                  </Button>\n                </Box>\n              </Box>\n            );\n          }}\n        </Formik>\n      </Box>\n    </div>\n  );\n};\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}